#!/bin/bash
echo "New Notes: http://louwrentius.com/parallel-distributed-password-cracking-with-john-the-ripper-and-mpi.html"
echo ""
echo "MPI can possibly do it, possibly with the sequence below and the appropriate opencl switches on john (watch the .configure results)."
echo ""
echo "apt-get install libopenmpi-dev openmpi-bin"
echo "./configure --enable-mpi   (watch results to ensure both are truly enabled.  If it built with opencl by itself it will build with both)"
echo "Make sure all options you want are enabled."
echo "use 'mpirun -np [number of processor (virtual) cores as appropriate (for GPU's see GPU cracking notes] ./john --test' to test."
echo ""
echo "'mpirun -np 1 ./john --list=opencl-devices' works.  If you use more processors you'll see results that many times."
echo ""
echo ""
echo "Old Notes"
echo ""
echo ""
echo ""
echo "To run john in mpi mode, first download the latest jumbo version."
echo "Then install the mpi support: apt-get install libopenmpi-dev openmpi-bin mpich2"
echo "you will also need apt-get install libssl-dev however you may need to add this to sources.list:"
echo "deb http://security.ubuntu.com/ubuntu lucid-security main"
echo "Also, if backtrack's SSH doesn't allow connections by default, you may need to generate the ssh certs:"
echo "sudo ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key"
echo "ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key"
echo "ssh-keygen -t rsa1 -f /etc/ssh/ssh_host_rsa1_key"
echo "/etc/init.d/ssh reload"

echo ""
echo "Then edit the src/Makefile and enable the lines:"
echo "CC = mpicc -DHAVE_MPI -DJOHN_MPI_BARRIER -DJOHN_MPI_ABORT"
echo "MPIOBJ = john-mpi.o"
echo ""
echo "Then build with make linux-x86-64 (you can also build gpu versions if you have support."
echo ""
echo "Then run as:"
echo "Note: used to be mpirun but starting with Kali and MPI/OMP support a lock file issue exists.  mpiexec seems better about it."
echo ""
echo " mpiexec -np [number of processor (virtual) cores] ./john --test"
echo "compare against ./john --test and make sure the cores are being used."
echo "(Numbers should be higher)"
echo ""
echo "To run using multiple cores on a single box, use something like: mpirun -np 3 john --session=clientname --format=NETLM /home/mpiscopo/PenTests/hashes.txt"
echo ""
echo "To run across multiple systems, you need to set up a nodes.txt file with the number of cores/slots on each (localhost needs to be explicitly added too if it will be used).  The hash file also needs to be on each system (on Backtrack thaat would be in /pentest/passwords/john)."
echo "You also need to set up ssh certificate login (generate keys on master with 'ssh-keygen', distribute id_rsa.pub to each remote node).  There's a user account called jtr we have been creating.  The following link provides a reference: http://louwrentius.com/blog/2011/02/parallel-/-distributed-password-cracking-with-john-the-ripper-and-mpi/"
echo ""
echo "Ultimately the most useful commands are:"
echo "[local multi-core] mpiexec -np 3 john --session=clientname --format=NETLM /home/mpiscopo/PenTests/hashes.txt"
echo "[local status] mpiexec -np 3 ./john --status=clientname"
echo "[distributed] mpiexec -np 7 -hostfile nodes.txt john --config=john.conf --session=clientname --format=NETLM ./client-hashes.txt"
echo "[distributed status] mpiexec -np 7 -hostfile nodes.txt ./john --status=clientname"
echo "to end processes, kill the mpirun process on the master/coordinator"
echo ""

